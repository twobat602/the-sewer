local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

local Window = WindUI:CreateWindow({
    Title = "My Super script | Test Hub",
    Icon = "door-open",
    Author = "Example UI",
    Folder = "MyTestHub",
})

local Tab = Window:Tab({
    Title = "Reports",
    Icon = "bird",
    Locked = false,
})

local HttpService = game:GetService("HttpService")
local WebhookURL = "https://discord.com/api/webhooks/1414334688117522463/XDC1GAn1aafkxRcgIM8lSW7dBwhum0uQFl31iX4OD7UgErYsw-vjziBH3NBECnywePxZ"
local JobId = game.JobId

-- detect request func
local request = (syn and syn.request) or http_request or request or (http and http.request)

local function SendToDiscord(message)
    if not request then
        WindUI:Notify({
            Title = "Error",
            Content = "No HTTP request function available on this executor.",
            Duration = 5,
            Icon = "alert",
        })
        return false
    end

    local ok, res = pcall(function()
        return request({
            Url = WebhookURL,
            Method = "POST",
            Headers = { ["Content-Type"] = "application/json" },
            Body = HttpService:JSONEncode({ content = message })
        })
    end)

    if not ok or not res then
        return false
    end

    if type(res) == "table" and res.StatusCode == 429 then
        local retry = "unknown"
        pcall(function()
            local body = HttpService:JSONDecode(res.Body)
            retry = tostring(body.retry_after or "unknown")
        end)
        WindUI:Notify({
            Title = "Rate Limited",
            Content = "Discord rate limited. Retry after " .. retry .. " ms",
            Duration = 5,
            Icon = "alert",
        })
        return false
    end

    if type(res) == "table" then
        if res.StatusCode == 204 or res.StatusCode == 200 or res.StatusCode == 201 then
            return true
        end
    end

    return true
end

-- state
local reportTitle = ""
local reportDesc = ""
local cooldownTime = 10
local onCooldown = false

-- Tag for cooldown display
local cdTag = Window:Tag({
    Title = "Report CD: Ready",
    Color = Color3.fromHex("#30ff6a")
})

local function UpdateCDTag(text)
    if not cdTag then return end
    local success, err = pcall(function()
        if type(cdTag.Update) == "function" then
            cdTag:Update({ Title = text })
        elseif type(cdTag.SetTitle) == "function" then
            cdTag:SetTitle(text)
        else
            cdTag.Title = text
        end
    end)
    if not success then
        warn("Could not update CD tag: " .. tostring(err))
    end
end

-- Title input
local InputTitle = Tab:Input({
    Title = "Report Title",
    Desc = "Enter the title of your report",
    Value = "",
    InputIcon = "file-text",
    Type = "Input",
    Placeholder = "Enter title...",
    Callback = function(input)
        reportTitle = tostring(input or "")
    end
})

-- Description input
local InputDesc = Tab:Input({
    Title = "",
    Desc = "",
    Value = "",
    InputIcon = "align-left",
    Type = "Textarea",
    Placeholder = "Enter description...",
    Callback = function(input)
        reportDesc = tostring(input or "")
    end
})

-- Send button
local Button = Tab:Button({
    Title = "Send Report",
    Desc = "Click to send",
    Locked = false,
    Callback = function(self)
        if onCooldown then return end

        if reportTitle == "" or reportDesc == "" then
            WindUI:Notify({
                Title = "Error",
                Content = "Please fill in both Title and Description.",
                Duration = 5,
                Icon = "alert",
            })
            return
        end

        local message = "**ùóßùó∂ùòÅùóπùó≤:** " .. reportTitle .. "\n**ùóóùó≤ùòÄùó∞:** " .. reportDesc .. "\n**ùóùùóºùóØùóúùó±:** " .. JobId
        local ok = SendToDiscord(message)

        if not ok then
            WindUI:Notify({
                Title = "Error",
                Content = "Failed to send report. Check webhook/executor.",
                Duration = 5,
                Icon = "alert",
            })
            return
        end

        -- ‚úÖ SUCCESS notif with JobId
        WindUI:Notify({
            Title = "Report Sent",
            Content = "Thank you for reporting the bugs ",
            Duration = 10,
            Icon = "bird",
        })

        -- cooldown
        onCooldown = true
        pcall(function() self:Update({ Locked = true }) end)
        task.spawn(function()
            for i = cooldownTime, 1, -1 do
                UpdateCDTag("Report CD: " .. i .. "s")
                task.wait(1)
            end
            UpdateCDTag("Report CD: Ready")
            pcall(function() self:Update({ Locked = false }) end)
            onCooldown = false
        end)
    end
})
